getwd()
rm(list=ls()) # Clear the environment
# setwd("...")  # Setup the working directory
movies <- read.csv("movies.csv",stringsAsFactors=FALSE)
str(movies)
head(movies) # First part of the dataframe
summary(movies) # Summary of the data
# Count the number of fields separated by "|" in each row of genres.csv
countfields <- count.fields("genres.csv", sep="|")
# The first movie, for example has 5 genres listed
countfields[1]
# With this command, we can see that movies have from 1 to 7 genres listed
min(countfields)
max(countfields)
# Now, we load genres.csv. The command creates a dataframe with 8569 observations and 7 variables with column names X1 ... X7.
genres <- read.csv("genres.csv", header=FALSE, sep="|", col.names=c("X1","X2","X3","X4","X5","X6","X7"), stringsAsFactors=TRUE)
# Note that each variable has different number of levels
str(genres)
# Source and run the function
source('process_genre_data.R')
M <- process_genre_data(genres)
set.seed(1)
clusterMovies2 <- kmeans(Data[,1:19],centers=10,nstart=20)
# subset(Data$title, clusterGroups1==6)
subset(Data, movies$title=="Grand Budapest Hotel, The (2014)")
# Count the number of fields separated by "|" in each row of genres.csv
countfields <- count.fields("genres.csv", sep="|")
# The first movie, for example has 5 genres listed
countfields[1]
# With this command, we can see that movies have from 1 to 7 genres listed
min(countfields)
max(countfields)
# Now, we load genres.csv. The command creates a dataframe with 8569 observations and 7 variables with column names X1 ... X7.
genres <- read.csv("genres.csv", header=FALSE, sep="|", col.names=c("X1","X2","X3","X4","X5","X6","X7"), stringsAsFactors=TRUE)
# Note that each variable has different number of levels
str(genres)
# Source and run the function
source('process_genre_data.R')
M <- process_genre_data(genres)
Data <- as.data.frame(M)
Data$title <- movies$title
Data <- Data[,-19] # Drops the 19th column, which corresponds to the "" category
distances <- dist(Data[,1:19], method="euclidean")
dim(Data)
# length(distances)
clusterMovies1 <- hclust(distances, method="ward.D2")
plot(clusterMovies1)
clusterGroups1 <- cutree(clusterMovies1, k=10)
tapply(Data[,1], clusterGroups1, mean)
Cat1 <- matrix(0,nrow=19,ncol=10)
for(i in 1:19)
{Cat1[i,] <- tapply(Data[,i], clusterGroups1, mean)}
rownames(Cat1) <- colnames(Data)[1:19]
Cat1
# subset(Data$title, clusterGroups1==6)
subset(Data, movies$title=="Grand Budapest Hotel, The (2014)")
clusterGroups1[8418]
subset(Data, movies$title=="Moneyball (2011)")
clusterGroups1[7925]
subset(Data, movies$title=="X-Men: First Class (2011)")
clusterGroups1[7849]
set.seed(1)
clusterMovies2 <- kmeans(Data[,1:19],centers=10,nstart=20)
clusterMovies2$tot.withinss
set.seed(1)
clusterMovies3 <- kmeans(Data[,1:19],centers=10,nstart=1)
clusterMovies3$tot.withinss
set.seed(1)
fit <- 0
for(k in 1:15)
{clusterMovies4 <- kmeans(Data[,1:19], centers=k, nstart=20)
fit[k] <- clusterMovies4$tot.withinss}
plot(1:15,fit)
Cat2 <- matrix(0,nrow=19,ncol=10)
for(i in 1:19)
{Cat2[i,] <- tapply(Data[,i], clusterMovies2$cluster, mean)}
rownames(Cat2) <- colnames(Data)[1:19]
Cat2
View(M)
View(M)
rm(list=ls()) # Clear the environment
# setwd("...")  # Setup the working directory
clusterGroups1 <- cutree(clusterMovies1, k=10) #cutting for the dendogram
rm(list=ls()) # Clear the environment
# setwd("...")  # Setup the working directory
getwd()
movies <- read.csv("movies.csv",stringsAsFactors=FALSE)
str(movies)
View(movies)
View(movies)
head(movies) # First part of the dataframe
summary(movies) # Summary of the data
# Count the number of fields separated by "|" in each row of genres.csv
countfields <- count.fields("genres.csv", sep="|")
# The first movie, for example has 5 genres listed
countfields[1]
# With this command, we can see that movies have from 1 to 7 genres listed
min(countfields)
max(countfields)
# Now, we load genres.csv. The command creates a dataframe with 8569 observations and 7 variables with column names X1 ... X7.
genres <- read.csv("genres.csv", header=FALSE, sep="|", col.names=c("X1","X2","X3","X4","X5","X6","X7"), stringsAsFactors=TRUE)
# Note that each variable has different number of levels
str(genres)
View(genres)
View(genres)
