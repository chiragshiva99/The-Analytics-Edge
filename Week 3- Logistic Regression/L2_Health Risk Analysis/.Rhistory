#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
install.packages("caTools")
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
framing1 <- subset(framing,PERIOD==1 & PREVCHD==0)
str(framing1)
length(unique(framing1$RANDID))
framing1$TENCHD <- as.integer((framing1$TIMECHD/365)<=10)
table(framing1$TENCHD)
colnames(framing1)
which(colnames(framing1) == "PERIOD")
framing1 <- framing1[,c(1:21,40)]
str(framing1)
sum(is.na(framing1))
#install.packages("caTools")
library(caTools)
?sample.split
set.seed(1)
split <- sample.split(framing1$TENCHD,SplitRatio=0.65)
#split
training <- subset(framing1,split==TRUE)
test <- subset(framing1,split==FALSE)
#test
mean(training$TENCHD)
mean(test$TENCHD)
framing1 <- subset(framing,PERIOD==1 & PREVCHD==0)
str(framing1)
length(unique(framing1$RANDID))
plot(framing1$RANDID)
framing1 <- subset(framing,PERIOD==1 & PREVCHD==0)
str(framing1)
plot(framing1)
plot(framing1$RANDID)
view(framing1)
View(framing1)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
#install.packages("caTools")
framing <- read.csv("framingham.csv")
str(framing)
head(framing)
framing1 <- subset(framing,PERIOD==1 & PREVCHD==0)
str(framing1)
length(unique(framing1$RANDID))
#plot(framing1$RANDID)
framing1$TENCHD <- as.integer((framing1$TIMECHD/365)<=10)
table(framing1$TENCHD)
colnames(framing1)
which(colnames(framing1) == "PERIOD")
framing1 <- framing1[,c(1:21,40)]
str(framing1)
sum(is.na(framing1))
install.packages("caTools")
install.packages("caTools")
#install.packages("caTools")
library(caTools)
?sample.split
set.seed(1)
#Training and testing
split <- sample.split(framing1$TENCHD,SplitRatio=0.65)
#split
training <- subset(framing1,split==TRUE)
test <- subset(framing1,split==FALSE)
#test
mean(training$TENCHD)
mean(test$TENCHD)
?seed
??seed
?set.seed
model1 <- glm(TENCHD~.,data=training,family="binomial")
summary(model1)
model2 <- glm(TENCHD~SEX+TOTCHOL+AGE+SYSBP+DIABP+CIGPDAY+CURSMOKE+BMI+DIABETES+BPMEDS+HEARTRTE+GLUCOSE+educ+PREVSTRK+PREVHYP,data=training,family="binomial")
summary(model2)
model3 <- glm(TENCHD~SEX+AGE+SYSBP+CIGPDAY+GLUCOSE,data=training,family="binomial")
summary(model3)
model3$coefficients
x<-t(model3$coefficients)%*%c(1,1,60,145,2,80)
x  ## log(odds) scale
exp(x)/(1+exp(x))  ## probabilities
exp(x)/(1+exp(x))
predict_test <- predict(model3,newdata=test,type="response")
CM <- table(predict_test>0.5,test$TENCHD)  # check with lower values
CM
Accuracy = (CM[1,1]+CM[2,2])/sum(CM)
Accuracy
BaseAccuracy =  (sum(CM[1:2,1]))/sum(CM)
BaseAccuracy
Specificity = (CM[1,1])/sum(CM[1:2,1])
Sensitivity = (CM[2,2])/sum(CM[1:2,2])
Sensitivity
Specificity
predict_test <- predict(model3,newdata=test,type="response")
#apply a threshold for the CM
CM <- table(predict_test>0.5,test$TENCHD)  # check with lower values
CM
table(training$TENCHD)
CM<-table(predict_test > 0.25,test$TENCHD)  # check with other values
CM
Accuracy = (CM[1,1]+CM[2,2])/sum(CM)
Accuracy
BaseAccuracy =  (sum(CM[1:2,1]))/sum(CM)
BaseAccuracy
Specificity = (CM[1,1])/sum(CM[1:2,1])
Sensitivity = (CM[2,2])/sum(CM[1:2,2])
Sensitivity
Specificity
library(ROCR)
install.packages("ROCR")
library(ROCR)
pr3<-complete.cases(cbind(predict_test,test$TENCHD))
predict3 <- prediction(predict_test[pr3],test$TENCHD[pr3])
perf3 <- performance(predict3,x.measure="fpr",measure="tpr")
plot(perf3)
plot(perf3,colorize=T,print.cutoffs.at=c(0,0.1,0.2,0.3,0.5,1),text.adj=c(-.02,1.7))
as.numeric(performance(predict3,measure="auc")@y.values)
summary(model3)
