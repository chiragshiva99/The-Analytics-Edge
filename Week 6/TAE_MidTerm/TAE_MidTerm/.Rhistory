# Load all packages
library(caTools)      # For properly splitting data into training and test sets
library(ROCR)         # For calculating model performance measures
# * `MOTHERED`: Motherâs education (years of schooling)
# * `FATHERED`: Fatherâs education (years of schooling)
# * `BRKNHOME`: Residence in a broken home (1 = yes, 0 = no)
# * `SIBLINGS`: Number of siblings.
#
# In the dataset, the variables `EDUC`, `LOGWAGE`, and `EXPER` for an individual vary with time,
# while the variables `ABILITY`, `MOTHERED`, `FATHERED`, `BRKNHOME` and `SIBLINGS` for an individual do not vary with time.
#
#
# Remove all variables from the R environment to create a fresh start
rm(list=ls())
# Read the data into the dataframe `wages`. How many individuals are there in the dataset?
#
wages <- read.csv("wages.csv")
View(wages)
View(wages)
# WRITE YOUR ANSWER HERE
summary(wages)
# WRITE YOUR ANSWER HERE
max(wages$ID)
?table
# WRITE YOUR ANSWER HERE
table(wages$ID)
# WRITE YOUR ANSWER HERE
table(wages$ID[,max(wages$ID)])
# WRITE YOUR ANSWER HERE
table(wages$ID[])
# WRITE YOUR ANSWER HERE
table(wages$ID[,])
# WRITE YOUR ANSWER HERE
table(wages$ID[])
# WRITE YOUR ANSWER HERE
subset(wages$ID, max(nrow))
# WRITE YOUR ANSWER HERE
table(wages$ID[])
# WRITE YOUR ANSWER HERE
table(max(wages$ID[]))
# WRITE YOUR ANSWER HERE
table(max(nrow(wages$ID[])))
# WRITE YOUR ANSWER HERE
table(max(nrow(wages$ID)))
table(wages$ID)
max(table(wages$ID))
table(wages$ID[,"15"])
table(wages$ID[,15])
table(wages$ID[15])
max(table(wages$ID))
table(wages$ID[,max(table(wages$ID))])
table(wages$ID[max(table(wages$ID),)])
max(table(wages$ID))
# WRITE YOUR ANSWER HERE
model1  <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS,data=wages)
x<-summary(model1)
x$r.squared
# WRITE YOUR ANSWER HERE
model1  <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS,data=wages)
summary(model1)$r.squared
# WRITE YOUR ANSWER HERE
model2  <- lm(LOGWAGE~EDUC+EXPER,data=wages)
summary(model2)
summary(model2)$coefficients
# WRITE YOUR ANSWER HERE
summary(model1)$r.squared
summary(model2)$r.squared
summary(model1)$adj.r.squared
summary(model2)
# WRITE YOUR ANSWER HERE
summary(model1)$r.squared
summary(model1)$adj.r.squared
summary(model2)$r.squared
summary(model1)$adj.r.squared
# WRITE YOUR ANSWER HERE
summary(model1)$r.squared
summary(model1)$adj.r.squared
summary(model2)$r.squared
summary(model2)$adj.r.squared
summary(model2)
# WRITE YOUR ANSWER HERE
model3  <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS+EDUC+EXPER,data=wages)
summary(model3)
p_val_1 <- summary(model3)$coefficients[,4]
p_val_1
names(p_val_1[p_val_1 < 0.05])
names(p_val_1[p_val_1 > 0.05])
# WRITE YOUR ANSWER HERE
cor(baseballlarge[,'ABILITY','MOTHERED','FATHERED','BRKNHOME','SIBLINGS','EDUC','EXPER'])
# WRITE YOUR ANSWER HERE
cor(wages[,'ABILITY','MOTHERED','FATHERED','BRKNHOME','SIBLINGS','EDUC','EXPER'])
library(psych)
pairs.panels(wages, ellipses = F, lm =T, breaks=10, hist.col="blue")
# WRITE YOUR ANSWER HERE
#cor(wages[,'ABILITY','MOTHERED','FATHERED','BRKNHOME','SIBLINGS','EDUC','EXPER'])
library(psych)
pairs.panels(wages, ellipses = F, lm =T, breaks=10, hist.col="blue")
# WRITE YOUR ANSWER HERE
#cor(wages[,'ABILITY','MOTHERED','FATHERED','BRKNHOME','SIBLINGS','EDUC','EXPER'])
library(psych)
dd
ddwdw
exit()
# WRITE YOUR ANSWER HERE
summary(model1)$adj.r.squared
summary(model2)$adj.r.squared
summary(model3)$adj.r.squared
# WRITE YOUR ANSWER HERE
wage_highschool <- subset(wages, wages$EDUC ==0)
mean(wage_highschool$LOGWAGE)
# WRITE YOUR ANSWER HERE
wage_highschool <- subset(wages, wages$EDUC ==0 & wages$BRKNHOME ==0)
mean(wage_highschool$LOGWAGE)
#log value = 2.220994
exp(mean(wage_highschool$LOGWAGE))
# Does the `LOGWAGE` variable have a negative dependence on any of the variables in the model?
# If yes, provide an intuitive explanation for this result.
sumary(model3)
# Does the `LOGWAGE` variable have a negative dependence on any of the variables in the model?
# If yes, provide an intuitive explanation for this result.
summary(model3)
# WRITE YOUR ANSWER HERE
wage_highschool_BRKNHOME_yes <-  subset(wages, wages$EDUC ==0 & wages$BRKNHOME ==1)
wage_highschool_BRKNHOME_no <- subset(wages, wages$EDUC ==0 & wages$BRKNHOME ==0)
# WRITE YOUR ANSWER HERE
wage_highschool_BRKNHOME_yes <-  subset(wages, wages$EDUC ==0 & wages$BRKNHOME ==1)
wage_highschool_BRKNHOME_no <- subset(wages, wages$EDUC ==0 & wages$BRKNHOME ==0)
percentage <- (mean(wage_highschool_BRKNHOME_no$LOGWAGE) - mean(wage_highschool_BRKNHOME_yes$LOGWAGE)) / mean(wage_highschool_BRKNHOME_no$LOGWAGE)
percentage
# WRITE YOUR ANSWER HERE
wages$EDUCABILITY <- wages$EDUC * wages$ABILITY
model4 <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS+EDUC+EXPER+EDUCABILITY,data=wages)
summary(model4)
# WRITE YOUR ANSWER HERE
wages$HS <- wages$EDUC >= 0
?if
d
# WRITE YOUR ANSWER HERE
wages$HS <- wages$EDUC >= 0
wages$COL <- wages$EDUC >= 1
wages$grad <- wages$EDUC >= 2
wages$GRAD <- wages$EDUC >= 2
model4 <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS+EXPER+EDUCABILITY+HS+COL+GRAD,data=wages)
summary(model4)
model4 <- lm(LOGWAGE~ABILITY+MOTHERED+FATHERED+BRKNHOME+SIBLINGS+EXPER+EDUCABILITY+COL+GRAD,data=wages)
summary(model4)
m4 <- summary(model4)
m4$residuals
summary(model4)
# * day: Last day client was contacted during the current campaign
# * month: Last month client was contacted during the current campaign
# * duration: Contact duration of the last call with the client during the current campaign (in seconds)
# * campaign: Number of contacts performed during the current campaign
# * previous: Number of contacts performed before this campaign
# * poutcome: Outcome of the previous marketing campaign
# * subscribe: Has the client subscribed to a term deposit? (1 = yes or 0 = no)
#
#
# Remove all variables from the R environment to create a fresh start
rm(list=ls())
# Read the dataset into the dataframe `bank`. Use a two-sided t-test to verify if there is evidence that
# the average bank balance of married clients is significantly different from that of single clients.
# What is the p-value of the test and your conclusion?
#
bank <- read.csv("bank.csv")
View(bank)
View(bank)
t.test(bank$balance[bank$marital=='married'],bank$balance[bank$marital=='single'])
# WRITE YOUR ANSWER HERE
t.test(bank$balance[bank$marital=='married'],bank$balance[bank$marital=='divorced'])
# We are interested in predicting the `subscribe` variable. Ensure that the package caTools is installed
# and loaded before running these commands:
#
set.seed(2017)
spl <- sample.split(bank$subscribe, SplitRatio=0.80)
#
#
# Using the information contained in `spl`, we split the data frame into a training dataframe called `train`
# using the observations for which `spl` is `TRUE` and a test dataframe called `test` using the observations
# for which `spl` is `FALSE`. Why do we set the seed before splitting the data into a training and testing set?
#
train <- subset(bank,spl==TRUE)
test  <- subset(bank,spl==FALSE)
# WRITE YOUR ANSWER HERE
model2_1 <- glm(subscribe ~., data = train, family = binomial)
summary(model2_1)
p_val_2_1 <- summary(model3)$coefficients[,4]
names(p_val_2_1[p_val_2_1 < 0.05])
p_val_2_1 <- summary(model2_1)$coefficients[,4]
names(p_val_2_1[p_val_2_1 < 0.05])
# WRITE YOUR ANSWER HERE
x <- model2_1$coefficients[1]
exp(x)/(1+exp(x))
x
exp(x)/(1+exp(x))
# WRITE YOUR ANSWER HERE
summary(model2_1)
# WRITE YOUR ANSWER HERE
pred_3_d <- predict(model2_1, newdata = test, type = "response")
# at threshold 0.5
table(model2_1 >= 0.5, test$subscribe)
# WRITE YOUR ANSWER HERE
pred_3_d <- predict(model2_1, newdata = test, type = "response")
# at threshold 0.5
table(model2_1 >= 0.5, test$subscribe)
View(test)
View(test)
# at threshold 0.5
table(model2_1 >= 0.5, test$subscribe)
# at threshold 0.5
table(pred >= 0.5, test$subscribe)
# at threshold 0.5
table(pred_3_d >= 0.5, test$subscribe)
# WRITE YOUR ANSWER HERE
pred <- predict(model2_1, newdata = test, type = "response")
table(pred >= 0.5, test$subscribe)
# WRITE YOUR ANSWER HERE
pred <- predict(model2_1, newdata = test, type = "response")
table(pred >= 0.5, test$subscribe)
x <- sum(diag(table(pred >= 0.5, test$subscribe)))/nrow(test)
x
# WRITE YOUR ANSWER HERE
x <- sum(diag(table(pred, test$subscribe)))/nrow(test)
x
# WRITE YOUR ANSWER HERE
x <- sum(diag(table(pred, test$subscribe)))/nrow(test)
x #ans 0.001106195
ROCRpred <- prediction(pred,test$subscribe)
ROCRperf <- performance(ROCRpred,x.measure="fpr",measure="tpr")
plot(ROCRperf)
plot(ROCRperf, colorize=T,print.cutoffs.at=c(0,0.1,0.2,0.3,0.5,1), text.adj=c(-0.2,1.7))
# WRITE YOUR ANSWER HERE
as.numeric(performance(ROCRpred,measure="auc")@y.values)
# WRITE YOUR ANSWER HERE
test_subscribed <- subset(test, test$subscribe==1)
test_notsubscribed <- subset(test, test$subscribe==0)
pred_subscribed <- predict(model2_1, newdata = test, type = "response")
table(pred_subscribed >= 0.5, test$subscribe)
# WRITE YOUR ANSWER HERE
test_subscribed <- subset(test, test$subscribe==1)
test_notsubscribed <- subset(test, test$subscribe==0)
pred_subscribed <- predict(model2_1, newdata = test_subscribed, type = "response")
table(pred_subscribed >= 0.5, test$subscribe)
pred_subscribed <- predict(model2_1, newdata = test_subscribed, type = "response")
table(pred_subscribed >= 0.5, test_subscribed$subscribe)
pred_notsubscribed <- predict(model2_1, newdata = test_notsubscribed, type = "response")
table(pred_notsubscribed >= 0.5, test_notsubscribed$subscribe)
pred_subscribed <- predict(model2_1, newdata = test_subscribed, type = "response")
CM1 <- table(pred_subscribed >= 0.5, test_subscribed$subscribe)
Accuracy = (CM1[1,1]/sum(CM1))
pred_subscribed <- predict(model2_1, newdata = test_subscribed, type = "response")
CM1 <- table(pred_subscribed >= 0.5, test_subscribed$subscribe)
Accuracy1 = (CM1[1,1]/sum(CM1))
(CM1[1,1]/sum(CM1))
(CM2[1,1]/sum(CM2))
CM2 <- table(pred_notsubscribed >= 0.5, test_notsubscribed$subscribe)
(CM2[1,1]/sum(CM2))
(CM1[1,1]/sum(CM1)) #high accuracy
?predict
# WRITE YOUR ANSWER HERE
pred.out.link <- predict(train, outSample, type = "link")
# WRITE YOUR ANSWER HERE
pred.out.link <- predict(train, type = "link")
# WRITE YOUR ANSWER HERE
#pred.out.link <- predict(train, type = "link")
#mod.out.null <- glm(Default~1, family = binomial, data = outSample)
model2_1 <- glm(subscribe ~., data = train, family = binomial)
mod_null <- glm(y~1, family = binomial, data = insample)
pR2.out <- 1 - logLik(model2_1)/logLik(mod_null)
# WRITE YOUR ANSWER HERE
#pred.out.link <- predict(train, type = "link")
#mod.out.null <- glm(Default~1, family = binomial, data = outSample)
model2_1 <- glm(subscribe ~., data = train, family = binomial)
# WRITE YOUR ANSWER HERE
#pred.out.link <- predict(train, type = "link")
#mod.out.null <- glm(Default~1, family = binomial, data = outSample)
model2_1 <- glm(subscribe ~., data = train, family = binomial)
mod_null <- glm(subscribe~1, family = binomial, data = train)
pR2.out <- 1 - logLik(model2_1)/logLik(mod_null)
pR2.out
