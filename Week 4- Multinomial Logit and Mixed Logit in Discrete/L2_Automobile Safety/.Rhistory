rm(list=ls())
safety <- read.csv("safetydata.csv")
str(safety)
rm(list=ls())
safety <- read.csv("safetydata.csv")
str(safety)
#View(safety)
view(safety)
View(safety)
table(safety$Choice)
safety$Choice <- as.numeric(sub("Ch","",safety$Choice))
table(safety$Choice)
safety$Choice
safety$Choice[1:5]
which(colnames(safety)=="CC1")
which(colnames(safety)=="Price4")
library(mlogit)
# library(dfidx)
# View(safety)
S <- dfidx(subset(safety, Task<=12), shape="wide", choice="Choice", varying =c(4:83), sep="", idx = list(c("No", "Case")), idnames = c(NA, "alt"))
library(mlogit)
# library(dfidx)
# View(safety)
S <- dfidx(subset(safety, Task<=12), shape="wide", choice="Choice", varying =c(4:83), sep="", idx = list(c("No", "Case")), idnames = c(NA, "alt"))
library(mlogit)
# library(dfidx)
# View(safety)
S <- dfidx(subset(safety, Task<=12), shape="wide", choice="Choice", varying =c(4:83), sep="", idx = list(c("No", "Case")), idnames = c(NA, "alt"))
head(S)
#str(S)
M <- mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price-1, data=S)
summary(M)
wtp<- as.numeric(-M$coefficients["CC"]/M$coefficients["Price"])
wtp
ActualChoice <- subset(safety, Task<=12)[,"Choice"]
P <- predict(M, newdata=S)
PredictedChoice <- apply(P,1,which.max)
ActualChoice <- subset(safety, Task<=12)[,"Choice"]
P <- predict(M, newdata=S)
PredictedChoice <- apply(P,1,which.max)
Tabtrain=table(PredictedChoice, ActualChoice)
Tabtrain
CorPredTrain<-sum(diag(Tabtrain))/sum(Tabtrain)
CorPredTrain
Test <-dfidx(subset(safety, Task>12), shape="wide", choice="Choice", varying =c(4:83), sep="",idx = list(c("No", "Case")), idnames = c(NA, "alt"))
TestPredict <- predict(M, newdata=Test)
ActualChoice <- subset(safety, Task>12)[,"Choice"]
PredictedChoice <- apply(TestPredict, 1, which.max)
Tabtest=table(PredictedChoice, ActualChoice)
Tabtrain
Tabtest
CorPredTest<-sum(diag(Tabtest))/sum(Tabtest)
CorPredTest
M1 <- mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price-1, data=S, rpar=c(CC='n', GN='n', NS='n', BU='n',FA='n',LD='n',BZ='n',FC='n',FP='n',RP='n',PP='n',KA='n',SC='n',TS='n',NV='n',MA='n',LB='n',AF='n',HU='n',Price='n'), panel = TRUE, print.level=TRUE)
summary(M1)
?mlogit
#M$logLik
Mloglik <- round(as.numeric(M$logLik),digits=2)
AICM <- -2*Mloglik + 2*20
M1loglik <- round(as.numeric(M1$logLik),digits=2)
AICM1 <- -2*M1loglik +2*40
Mloglik
AICM
M1loglik
AICM1
P1 <- predict(M1, newdata=S)
PredictedChoice1 <- apply(P1, 1, which.max)
ActualChoice <- subset(safety, Task<=12)[,"Choice"]
Tabtrainmixed <- table(PredictedChoice1, ActualChoice)
CorPredTrmix <- sum(diag(Tabtrainmixed))/sum(Tabtrainmixed)
Tabtrain
CorPredTrain
Tabtrainmixed
CorPredTrmix
TestPredict1 <- predict(M1, newdata=Test)
PredictedChoice1 <- apply(TestPredict1,1,which.max)
ActualChoice1 <- subset(safety, Task>12)[,"Choice"]
Tabtestmixed <- table(PredictedChoice1, ActualChoice1)
CorPredTestmixed <- sum(diag(Tabtestmixed))/sum(Tabtestmixed)
Tabtest
CorPredTest
Tabtestmixed
CorPredTestmixed
ActualChT <- subset(safety, Task>12)
ActChT <- cbind(ActualChT$Ch1,ActualChT$Ch2,ActualChT$Ch3,ActualChT$Ch4)
# ActChT
# TestPredict
MNLtestLL <- sum(ActChT*log(TestPredict))
MixedtestLL <- sum(ActChT*log(TestPredict1))
MNLtestLL
MixedtestLL
