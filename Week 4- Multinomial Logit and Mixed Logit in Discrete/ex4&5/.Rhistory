rm(list=ls())
# install.packages("mlogit")
library(mlogit)
#1
heating <- read.csv("Heating.csv")
?mlogit
rm(list=ls())
# install.packages("mlogit")
library(mlogit)
install.packages("mlogit")
# install.packages("mlogit")
library(mlogit)
#1
heating <- read.csv("Heating.csv")
?mlogit
?mlogit.data
#1
heating <- read.csv("Heating.csv")
#a
dataheat <- mlogit.data(heating,        # data.frame of data
choice = "depvar",  # column name of choice
shape = "wide",     # wide means each row is an observation
# long if each row is an alternative
varying = c(3:12),  # indices of varying columns for each alternative,
sep = "."           # not necessary but still good to be clear
)
modelQ1_1 <- mlogit(depvar ~ ic + oc - 1, dataheat)  # -1 means no intercept
#i
modelQ1_1$coefficients
#ii
summary(modelQ1_1)
#iii
#actual shares
table(heating$depvar)/nrow(heating)
# vs predicted shares (average)
predQ1_1<- predict(modelQ1_1, newdata = dataheat)
apply(predQ1_1, 2, mean)
?apply(,
d
ss
?apply
#iv
#calculating the ratio of coefficients
wtp <- as.numeric(coef(modelq1_1)["oc"]/coef(modelQ1_1)["ic"])
wtp
#iv
#calculating the ratio of coefficients
wtp <- as.numeric(coef(modelq1_1)["oc"]/coef(modelQ1_1)["ic"])
#iv
#calculating the ratio of coefficients
wtp <- as.numeric(coef(modelQ1_1)["oc"]/coef(modelQ1_1)["ic"])
wtp
#b
dataheat$lcc <- dataheat$ic + (dataheat$oc /0.12)
modelQ1_1 <-mlogit(depvar ~ lcc - 1, dataheat)
logLik(modelQ1_2)
logLik(modelQ1_2)
#b
dataheat$lcc <- dataheat$ic + (dataheat$oc /0.12)
modelQ1_1 <-mlogit(depvar ~ lcc - 1, dataheat)
modelQ1_1 <- mlogit(depvar ~ ic + oc - 1, dataheat)  # -1 means no intercept
#b
dataheat$lcc <- dataheat$ic + (dataheat$oc /0.12)
modelQ1_2 <-mlogit(depvar ~ lcc - 1, dataheat)
logLik(modelQ1_1)
logLik(modelQ1_2)
#c
modelQ1_3 <- mlogit(depvar ~ ic + oc, data = dataheat, reflevel = "hp")
# This forces hp to be the reference level and the other alternative specific constants are relative to this
modelQ1_3
# This forces hp to be the reference level and the other alternative specific constants are relative to this
summary(modelQ1_3)
#i
predQ1_3<- predict(modelQ1_3, newdata=dataheat)
shareQ1_3<- apply(predQ1_3,2,mean)
shareQ1_3
#ii
wtp <- as.numeric(coef(modelQ1_3)["oc"]/coef(modelQ1_3)["ic"])
wtp
unname(modelQ1_3$coefficients["oc"]/modelQ1_3$coefficients["ic"])
?unname
#iii
summary(modelQ1_3)
#d
#create new installation cost
dataheat$iic <- dataheat$ic / dataheat$income
modelQ1_5 <- mlogit(depvar ~ oc + iic, dataheat)
summary(modelQ1_5)
#ii
modelQ1_6 <- mlogit(depvar ~ oc + ic | income, dataheat) # | used to enter alternate-specific argument
summary(modelQ1_6)
#e
#i
heating
dataheat1 <- mlogit.data(heating1,
choice = "depvar",
shape = "wide",
varying = c(3:12)
)
predQ1_3a <- predict(modelQ1_3, newdata = dataheat1)
shareQ1_3a <- apply(predQ1_3a, 2, mean)
shareQ1_3a
predQ1_3a <- predict(modelQ1_3, newdata = dataheat1)
#e
#i
heating1 <- heating1
heating1$ic.hp <- 0.9*heating1$ic.hp
dataheat1 <- mlogit.data(heating1,
choice = "depvar",
shape = "wide",
varying = c(3:12)
)
#e
#i
heating1 <- heating
heating1$ic.hp <- 0.9*heating1$ic.hp
dataheat1 <- mlogit.data(heating1,
choice = "depvar",
shape = "wide",
varying = c(3:12)
)
predQ1_3a <- predict(modelQ1_3, newdata = dataheat1)
shareQ1_3a <- apply(predQ1_3a, 2, mean)
shareQ1_3a
shareQ1_3
#2
library(mlogit)
electricity <- read.csv("Electricity.csv")
# str(electricity)
dim(electricity)
?mlogit.data
? mlogit
# mlogit model without intercepts, normal distribution for 6 parameters
modelQ2_1<- mlogit(choice~pf+cl+loc+wk+tod+seas-1,
electricity_data,
rpar=c(pf='n',cl='n',loc='n',wk='n',tod='n', seas='n'), #a named vector whose names are the random parameters and values the distribution
panel=T,
print.level=T)
#a
# choices made captured in 'id' variable
electricity_data<-mlogit.data(electricity,
id.var = "id", #col name of the individual index
choice = "choice", #col name
varying = c(3:26), #3rd to 26th col
shape = "wide",
sep = "")
# mlogit model without intercepts, normal distribution for 6 parameters
modelQ2_1<- mlogit(choice~pf+cl+loc+wk+tod+seas-1,
electricity_data,
rpar=c(pf='n',cl='n',loc='n',wk='n',tod='n', seas='n'), #a named vector whose names are the random parameters and values the distribution
panel=T,
print.level=T)
summary(modelQ2_1)
#i
#look at the coefficient estimate of cl
modelQ2_1$coefficients["cl"] # estimated mean coeff for contract length
as.numeric(modelQ2_1$coefficients["cl"]/modelQ2_1$coefficients["pf"])
modelQ2_1$coefficients["cl"]/modelQ2_1$coefficients["pf"]
as.numeric(modelQ2_1$coefficients["cl"]/modelQ2_1$coefficients["pf"])
#ii
modelQ2_1$coefficients[c("cl", "sd.cl")]
pnorm(0,
as.numeric(modelQ2_1$coefficients["cl"]), # mean
as.numeric(modelQ2_1$coefficients["sd.cl"]) # sd
)
?pnorm
#b
pnorm(0, # P(x < 0)
as.numeric(modelQ2_1$coefficients["pf"]), # mean
as.numeric(modelQ2_1$coefficients["sd.pf"]) # sd
)
1-pnorm(0,
as.numeric(modelQ2_1$coefficients["pf"]), # mean
as.numeric(modelQ2_1$coefficients["sd.pf"]) # sd
)
## new model
modelQ2_2<- mlogit(choice~pf+cl+loc+wk+tod+seas-1,
electricity_data,
rpar=c(cl='n',loc='n',wk='n',tod='n', seas='n'), # now price no longer follows normal distribution
panel=T,print.level=T)
summary(modelQ2_2)
modelQ2_2$coefficients["pf"]
#comparison of model 1 and model 2
modelQ2_1$logLik
modelQ2_2$logLik
#c
modelQ2_3<-mlogit(choice~pf+cl+loc+wk+tod+seas-1,
electricity_data,
rpar=c(cl='n',loc='n',wk='u',tod='n', seas='n'), # now we set 'wk' to follow a uniform distribution
panel=T,print.level=T)
summary(modelQ2_3)
# extract this information from the model summary
summary(modelQ2_3)$summary.rpar["wk", c("Mean", "Min.", "Max.")]
# and find the estimated price coefficient
modelQ2_3$coefficients["pf"]
