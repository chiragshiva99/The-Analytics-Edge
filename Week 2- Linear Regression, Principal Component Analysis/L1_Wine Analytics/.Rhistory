wine <- read.csv("wine.csv")
wine
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine.csv")
str(wine)
summary(wine)
wine <- read.csv("wine.csv")
str(wine)
summary(wine)
View(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) +
ggplot(wine, aes(VINT,LPRICE)) + geom_point((na.rm=T) + geom_smooth((method="lm"),na.rm = T,se=F))
ggplot(wine, aes(VINT,LPRICE)) + geom_point((na.rm=T) + geom_smooth((method="lm"),na.rm = T,se=F)
ggplot(wine, aes(VINT,LPRICE)) + geom_point((na.rm=T) + geom_smooth((method="lm"),na.rm = T,se=F)
ggplot(wine, aes(VINT,LPRICE)) + geom_point((na.rm=T) + geom_smooth((method="lm"),na.rm = T,se=F)
?!
f
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine.csv")
str(wine)
wine <- read.csv("wine.csv")
wine
str(wine)
summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) +
geom_smooth(method="lm",na.rm=T,se=F)
pairs.panels(wine,ellipses = F, lm = T, breaks=10, hist.col="blue")  ## uses the psych package
## ggpairs(wine) #uses the GGally package
## pairs(wine)
# ?lm
model1  <- lm(LPRICE~VINT,data=winetrain)
winetrain <- subset(wine,wine$VINT<=1978 & !is.na(wine$LPRICE))
winetrain
winetest <- subset(wine,wine$VINT>1978)
winetest
# ?lm
model1  <- lm(LPRICE~VINT,data=winetrain)
model1
summary(model1)
# if the t-value is very high, then we reject the null hypothesis that all beta values are equal to zero
# dof = 25 - 1 (predictor) - 1 = 23
#autoplot(model1) # uses the ggfortify package
ggplot(winetrain, aes(VINT,LPRICE))+geom_point(na.rm=T)+ geom_smooth(method="lm",na.rm = T,se=F)
# ?lm
model1  <- lm(LPRICE~VINT,data=winetrain)
model1
summary(model1)
# if the t-value is very high, then we reject the null hypothesis that all beta values are equal to zero
# dof = 25 - 1 (predictor) - 1 = 23
autoplot(model1) # uses the ggfortify package
model1$residuals
sst1 <- sum((winetrain$LPRICE-mean(winetrain$LPRICE))^2)
sse1 <- sum((model1$residuals)^2)
R2<- 1-sse1/sst1  ### we did a direct computation but our model also gives an answer
R2
model2  <- lm(LPRICE~WRAIN,data=winetrain)
summary(model2)
# no stars on WRAIN, and high p-values indicates that maybe WRAIN is not significant
model3  <- lm(LPRICE~HRAIN,data=winetrain)
summary(model3)
# double stars indicates that HRAIN is significant at 0.01 level
model4  <- lm(LPRICE~DEGREES,data=winetrain)
summary(model4)
#ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf)),label=VINT))+geom_point(na.rm=T) + scale_color_discrete(name = "Above average price", labels = c("No", "Yes"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
#ggplot(winetrain,aes(DEGREES,HRAIN,color=LPRICE,label=VINT))+geom_point(na.rm=T)+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
#ggsave("HrainTemp.png", width = 10, height = 7)
br<-mean(winetrain$LPRICE)
br
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPRICE)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()
# adding vertical lines of the mean of degrees and HRAIN
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
model4  <- lm(LPRICE~DEGREES,data=winetrain)
summary(model4)
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()
# adding vertical lines of the mean of degrees and HRAIN
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
br<-mean(winetrain$LPRICE)
br
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPRICE)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
#ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf)),label=VINT))+geom_point(na.rm=T) + scale_color_discrete(name = "Above average price", labels = c("No", "Yes"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
#ggplot(winetrain,aes(DEGREES,HRAIN,color=LPRICE,label=VINT))+geom_point(na.rm=T)+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
#ggsave("HrainTemp.png", width = 10, height = 7)
model5  <- lm(LPRICE~DEGREES+HRAIN,data=winetrain)
summary(model5)
# both variables are significant at 0.01 level
model6  <- lm(LPRICE~.,data=winetrain)
summary(model6)
# TIME_SV is dependent on VINT
cor(winetrain)
model6  <- lm(LPRICE~.,data=winetrain)
summary(model6)
# TIME_SV is dependent on VINT
cor(winetrain)
model7  <- lm(LPRICE~VINT+DEGREES+WRAIN+HRAIN,data=winetrain)
summary(model7)
autoplot(model7)
# residuals scattered around zero, but sometimes a little too high
model7alt <- lm(LPRICE~WRAIN+DEGREES+HRAIN,data=winetrain)
summary(model7alt)
model4$coefficients
model4$residuals
confint(model4)
confint(model4,level=0.99)
str(winetest)
wineprediction7 <- predict(model7,newdata = winetest)
wineprediction7
cbind(c(1979,1980),wine$LPRICE[28:29],wineprediction7[1:2])
exp(cbind(wine$LPRICE[28:29],wineprediction7[1:2]))
sst <- sum(((winetest$LPRICE[1:2])-mean(winetrain$LPRICE))^2)
sse7 <- sum((wineprediction7[1:2]-winetest$LPRICE[1:2])^2)
1 - sse7/sst
wineprediction4 <- predict(model4,newdata = winetest)
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
1-sse4/sst
wineprediction5 <- predict(model5,newdata=winetest)
sse5 <- sum((wineprediction5[1:2]-winetest$LPRICE[1:2])^2)
1-sse5/sst
sst <-sum((winetest$LPRICE[1:2]-mean(winetrain$LPRICE))^2)
sse7 <- sum((wineprediction7[1:2]-winetest$LPRICE[1:2])^2)
R2_7<- 1-sse7/sst
R2_7
wineprediction4 <- predict(model4,newdata=winetest) ## prediction with Model 4
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
R2_4<- 1-sse4/sst
R2_4
wineprediction5 <- predict(model5,newdata=winetest) ## prediction with Model 5
sse5 <- sum((wineprediction5[1:2]-winetest$LPRICE[1:2])^2)
R2_5<-1-sse5/sst
R2_5
library(ggplot2)
ggplot(wine,aes(LPRICE))+geom_histogram(bins=8,na.rm=T,color="black",fill="lightblue")
ggplot(wine,aes(exp(LPRICE)))+geom_histogram(bins=8,na.rm=T,color="black",fill="lightblue")
#hist(wine$LPRICE)
#hist(exp(wine$LPRICE))
?lm
?dim
?prcomp
library(ggplot)
library(ggplot2)
?pairs.panels
?pairs
install.packages("psych")
install.packages("ggfortify")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine.csv")
str(wine)
wine <- read.csv("wine.csv")
str(wine)
summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) +
ggplot(wine, aes(VINT,LPRICE)) +
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine.csv")
str(wine)
summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) + geom_smooth(method="lm",na.rm=T,se=F)
pairs.panels(wine,ellipses = F, lm =T, breaks=10, hist.col="blue")  ## uses the psych package
## ggpairs(wine) #uses the GGally package
## pairs(wine)
?pairs.panels
?confit
?confint
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
install.packages(c("ggplot2", "psych", "ggfortify"))
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
is.na(wine)
wine <- read.csv("wine.csv")
str(wine)
wine <- read.csv("wine.csv")
str(wine)
summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) + geom_smooth(method="lm",na.rm=T,se=F)
pairs.panels(wine,ellipses = F, lm =T, breaks=10, hist.col="blue")  ## uses the psych package
## ggpairs(wine) #uses the GGally package
## pairs(wine)
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
rm(list=ls())
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine.csv")
#str(wine)
#summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) + geom_smooth(method="lm",na.rm=T,se=F)
pairs.panels(wine,ellipses = F, lm =T, breaks=10, hist.col="blue")  ## uses the psych package
## ggpairs(wine) #uses the GGally package
## pairs(wine)
winetrain <- subset(wine,wine$VINT<=1978 & !is.na(wine$LPRICE))
#winetrain
winetest <- subset(wine,wine$VINT>1978)
#winetest
#?lm
model1  <- lm(LPRICE~VINT,data=winetrain)
#model1
#summary(model1)
autoplot(model1) # uses the ggfortify package
ggplot(winetrain, aes(VINT,LPRICE))+geom_point(na.rm=T)+ geom_smooth(method="lm",na.rm = T,se=F)
model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum((winetrain$LPRICE-mean(winetrain$LPRICE))^2)
R2<-1 - sse1/sst1  ### we did a direct computation but our model also gives an answer
R2
#summary(model1)
#model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum((winetrain$LPRICE-mean(winetrain$LPRICE))^2)
R2<-1 - sse1/sst1  ### we did a direct computation but our model also gives an answer
R2
#summary(model1)
#model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum((winetrain$LPRICE-mean(winetrain$LPRICE))^2)
R2<-1 - sse1/sst1  ### we did a direct computation but our model also gives an answer
#R2
summary(model1)
#model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum((winetrain$LPRICE-mean(winetrain$LPRICE))^2)
R2<-1 - sse1/sst1  ### we did a direct computation but our model also gives an answer
R2
#summary(model1)
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()
#ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
#ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()
ggplot(winetrain,aes(DEGREES,HRAIN))+geom_point()+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
#br<-mean(winetrain$LPRICE)
#br
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPRICE)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf)),label=VINT))+geom_point(na.rm=T) + scale_color_discrete(name = "Above average price", labels = c("No", "Yes"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
ggplot(winetrain,aes(DEGREES,HRAIN,color=LPRICE,label=VINT))+geom_point(na.rm=T)+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1) + geom_text(aes(label=VINT),hjust=0, vjust=0) + xlab("Average growing season temperature") + ylab("Harvest rain")
#ggsave("HrainTemp.png", width = 10, height = 7)
model6  <- lm(LPRICE~.,data=winetrain)
#summary(model6)
cor(winetrain)
model4$coefficients
model4  <- lm(LPRICE~DEGREES,data=winetrain)
#summary(model4)
model4$coefficients
#model4$residuals
confint(model4)
confint(model4,level=0.99)
